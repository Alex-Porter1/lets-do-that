volumes:
  postgres-data:
      external: true
  activities:
      external: true
  accounts:
      external: true
services:
  postgres:
    build:
        context: ./relational-data
        dockerfile: ./Dockerfile.dev
    volumes:
        - postgres-data:/var/lib/postgresql/data
    environment:
        - POSTGRES_MULTIPLE_DATABASES=accounts,activities
        - POSTGRES_PASSWORD=test-databases
    ports:
        - 15432:5432
  accounts:
    build:
        context: ./accounts
        dockerfile: ./Dockerfile.dev
    ports:
        - "8080:8000"
    volumes:
        - ./accounts:/app
    environment:
        DATABASE_URL: postgresql://accounts:password@postgres/accounts
        WAIT_HOSTS: postgres:5432
  activities:
    build:
        context: ./activities
        dockerfile: ./Dockerfile.dev
    ports:
        - "8090:8000"
    volumes:
        - ./activities:/app
    environment:
        DATABASE_URL: postgresql://activities:password@postgres/activities
        WAIT_HOSTS: postgres:5432
  accounts-poller:
    build:
      context: ./accounts/poll
      dockerfile: ./Dockerfile.dev
    volumes:
      - ./accounts/poll:/app
      - ./accounts/accounts:/app/accounts
      - ./accounts/accounts_rest:/app/accounts_rest
    depends_on:
      - postgres
      - accounts
    environment:
      DATABASE_URL: postgres://accounts:password@postgres:5432/accounts
      WAIT_HOSTS: postgres:5432,accounts:8000
      WAIT_TIMEOUT: 240
  ghi:
    image: node:lts-bullseye
    command: /bin/bash run.sh
    working_dir: /app
    volumes:
        - ./ghi:/app
    ports:
        - "3000:3000"
    environment:
        HOST_OS: ${OS}
        NODE_ENV: development
        HOST: "0.0.0.0"
        REACT_APP_ACCOUNTS: http://localhost:8000
        REACT_APP_ACTIVITIES: http://localhost:8000
        REACT_APP_YELP_API_KEY: ${REACT_APP_YELP_API_KEY}
        REACT_APP_YELP_URL: https://api.yelp.com/v3/businesses/